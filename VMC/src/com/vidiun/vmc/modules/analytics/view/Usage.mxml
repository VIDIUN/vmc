<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:charts="com.vidiun.vmc.modules.analytics.view.charts.*"
		 xmlns:view="com.vidiun.vmc.modules.analytics.view.*" xmlns:dtn="com.vidiun.vmc.modules.analytics.view.dtn.*">
	<mx:Script>
		<![CDATA[
			import com.vidiun.analytics.GoogleAnalyticsConsts;
			import com.vidiun.analytics.GoogleAnalyticsTracker;
			import com.vidiun.vmc.events.VmcHelpEvent;
			import com.vidiun.vmc.modules.analytics.control.PartnerEvent;
			import com.vidiun.vmc.modules.analytics.control.StateEvent;
			import com.vidiun.vmc.modules.analytics.model.AnalyticsModelLocator;
			import com.vidiun.vmc.modules.analytics.model.types.ScreenTypes;
			import com.vidiun.vmc.modules.analytics.view.dtn.DTNItem;
			import com.vidiun.types.VidiunReportType;
			
			import mx.binding.utils.BindingUtils;
			import mx.events.FlexEvent;
			import mx.events.IndexChangedEvent;
			import mx.events.ItemClickEvent;


			private var _ready:Boolean = false;

			[Bindable]
			private var _model:AnalyticsModelLocator = AnalyticsModelLocator.getInstance();


			public function init(evt:Event = null):void {
				if (_ready) {
					BindingUtils.bindSetter(onStateChange, _model, "currentScreenState");

					(new StateEvent(StateEvent.STATE_CHANGE, ScreenTypes.PARTNER_BANDWIDTH_AND_STORAGE)).dispatch();

					var partnerEvent:PartnerEvent = new PartnerEvent(PartnerEvent.GET_PARTNER_INFO);
					partnerEvent.dispatch();
					pbns.onShow();
				}
				else {
					_ready = true;
					addEventListener(FlexEvent.CREATION_COMPLETE, init);
				}
			}


			private function onStateChange(newState:int):void {
				var gaEvent:String;
				for (var i:int = 0; i < dtn.numChildren; i++)
					(dtn.getChildAt(i) as DTNItem).btn.styleName = "dtnButton";

				switch (newState) {
					case ScreenTypes.PARTNER_BANDWIDTH_AND_STORAGE:
						usageViews.selectedIndex = dtn.selectedIndex = 0;
						gaEvent = GoogleAnalyticsConsts.ANALYTICS_PARTNER_USAGE_REPORTS;
						break;
					case ScreenTypes.END_USER_STORAGE:
						usageViews.selectedIndex = dtn.selectedIndex = 1;
						gaEvent = GoogleAnalyticsConsts.ANALYTICS_USER_USAGE_REPORTS;
						break;

					case ScreenTypes.END_USER_STORAGE_DRILL_DOWN:
						usageViews.selectedIndex = 2;
						dtn.selectedIndex = -1;
						(dtn.getChildAt(0) as DTNItem).btn.styleName = "selectedDtnBtn";
						gaEvent = GoogleAnalyticsConsts.ANALYTICS_SPECIFIC_USER_USAGE_REPORTS;
						break;
					default:
						// the new screen is not in Content's scope, need to hide panel
						(usageViews.selectedChild as VidiunReportView).onHide();
				}
				if (gaEvent) {
					GoogleAnalyticsTracker.getInstance().sendToGA(GoogleAnalyticsConsts.PAGE_VIEW + gaEvent, GoogleAnalyticsConsts.ANALYTICS);
				}
			}



			public function help():void {
				dispatchEvent(new VmcHelpEvent(VmcHelpEvent.HELP, 'section_analytics_usage'));
			}


			/**
			 * handle sub-navigation
			 * */
			private function onDtnChange():void {
				switch (dtn.selectedIndex) {
					case 0:
						(new StateEvent(StateEvent.STATE_CHANGE, ScreenTypes.PARTNER_BANDWIDTH_AND_STORAGE)).dispatch();
						break;
					case 1:
						(new StateEvent(StateEvent.STATE_CHANGE, ScreenTypes.END_USER_STORAGE)).dispatch();
						break;
				}
			}


			/**
			 * handle navigation to drilldown
			 * */
			private function onDrillDown(newState:int):void {
				var stateEvent:StateEvent = new StateEvent(StateEvent.STATE_CHANGE, newState);
				stateEvent.dispatch();
			}


		]]>
	</mx:Script>

	<dtn:DTN id="dtn" width="158" styleName="analyticsDtn" dataProvider="{_model.usageDtnDp}"
			 enabled="{!_model.loadingFlag}" change="onDtnChange()"/>
	<mx:ViewStack id="usageViews" width="100%" height="{this.height - 15}" styleName="contentViewStack" >
		<view:VidiunReportView id="pbns" width="100%" height="100%" showTimeUnits="true" dateOnlyFlag="true"
								showUsersFilter="false" showApplicationsFilter="false" 
								vdpParams="{_model.context}" loadChart="{_model.loadingChartFlag}"
								loadTotal="{_model.loadingTotalFlag}" loadTable="{_model.loadingTableFlag}"
								isLoading="{_model.loadingFlag}"
								filterVo="{_model.filterMasks.publisherBandwidthNStorage}"
								screenType="{ScreenTypes.PARTNER_BANDWIDTH_AND_STORAGE}"
								reportData="{_model.selectedReportData}" showSearchFilter="false"
								aggregatedHeaders="{_model.aggregateHeaders.publisherBandwidthNStorage}"
								tableHeaders="{_model.tableHeaders.publisherBandwidthNStorage}"
								dateRanger="{_model.longTermDatesRanger}"
								dimCbDp="{_model.reportDimension.publisherStorageNBandwidth}"
								reportType="{VidiunReportType.PARTNER_USAGE}"
								helpUrl="{'section_analytics_publisher_bandwidth_and_storage'}"
								label="{resourceManager.getString('analytics', 'pbns')}" styleName="pageStyle"/>
		<view:VidiunReportView id="endUserStorage" width="100%" height="100%" showTimeUnits="true" dateOnlyFlag="true"
								showApplicationsFilter="false" addGraphTotals="true" 
								vdpParams="{_model.context}" loadChart="{_model.loadingChartFlag}"
								loadTotal="{_model.loadingTotalFlag}" loadTable="{_model.loadingTableFlag}"
								isLoading="{_model.loadingFlag}" filterVo="{_model.filterMasks.endUserStorage}"
								screenType="{ScreenTypes.END_USER_STORAGE}" reportData="{_model.selectedReportData}"
								showSearchFilter="false" aggregatedHeaders="{_model.aggregateHeaders.endUserStorage}"
								tableHeaders="{_model.tableHeaders.endUserStorage}"
								dateRanger="{_model.longTermDatesRanger}"
								tableNonSortableHeaders="{_model.tableNonSortableHeaders.endUserStorage}"
								dimCbDp="{_model.reportDimension.endUserStorage}"
								reportType="{VidiunReportType.USER_USAGE}"
								drillDown="{onDrillDown(ScreenTypes.END_USER_STORAGE_DRILL_DOWN)}"
								helpUrl="{'section_analytics_end_user_storage'}"
								label="{resourceManager.getString('analytics', 'endUserStorage')}" styleName="pageStyle"/>
		<view:VidiunReportView id="specificEndUserStorage" width="100%" height="100%" showTimeUnits="true"
								dateOnlyFlag="true" showUsersFilter="false" showApplicationsFilter="false"
								addGraphTotals="true" addTableTotals="true" 
								vdpParams="{_model.context}" loadChart="{_model.loadingChartFlag}"
								loadTotal="{_model.loadingTotalFlag}" loadTable="{_model.loadingTableFlag}"
								isLoading="{_model.loadingFlag}"
								filterVo="{_model.filterMasks.publisherBandwidthNStorage}"
								screenType="{ScreenTypes.END_USER_STORAGE_DRILL_DOWN}"
								reportData="{_model.selectedReportData}" showSearchFilter="false" disablePager="true"
								aggregatedHeaders="{_model.aggregateHeaders.specificEndUserStorage}"
								tableHeaders="{_model.tableHeaders.specificEndUserStorage}"
								dateRanger="{_model.longTermDatesRanger}"
								tableNonSortableHeaders="{_model.tableNonSortableHeaders.specificEndUserStorage}"
								dimCbDp="{_model.reportDimension.endUserStorage}"
								reportType="{VidiunReportType.SPECIFIC_USER_USAGE}" isDrillDown="true"
								backScreenType="{ScreenTypes.END_USER_STORAGE}"
								helpUrl="{'section_analytics_end_user_storage_drilldown'}"
								label="{resourceManager.getString('analytics', 'endUserStorage')}" styleName="pageStyle" />
	</mx:ViewStack>
</mx:HBox>
