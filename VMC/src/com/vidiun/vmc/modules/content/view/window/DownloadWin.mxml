<?xml version="1.0" encoding="utf-8"?>
<HelpTitleWindow xmlns="com.vidiun.containers.*" xmlns:mx="http://www.adobe.com/2006/mxml" layout="vertical"
				 close="removeMe()" showCloseButton="true" title="{ resourceManager.getString('cms', 'download') }"
				 help="{onHelp()}">

	<mx:Script>
		<![CDATA[
			import com.vidiun.analytics.GoogleAnalyticsConsts;
			import com.vidiun.analytics.GoogleAnalyticsTracker;
			import com.vidiun.analytics.VAnalyticsTracker;
			import com.vidiun.analytics.VAnalyticsTrackerConsts;
			import com.vidiun.vmc.events.VmcHelpEvent;
			import com.vidiun.vmc.modules.content.events.DownloadEvent;
			import com.vidiun.vmc.modules.content.events.WindowEvent;
			import com.vidiun.types.VidiunStatsVmcEventType;
			import com.vidiun.vo.VidiunBaseEntry;
			import com.vidiun.vo.VidiunFlavorParams;
			
			import mx.collections.ArrayCollection;
			import mx.core.mx_internal;
			use namespace mx_internal;

			[ArrayElementType("VidiunBaseEntry")]
			/**
			 * list of entries to download
			 * */
			public var entries:Array;
			
			[Bindable]
			/**
			 * list of optional flavours for download
			 * */
			public var flavorParams:ArrayCollection;


			private function removeMe():void {
				var cgEvent:WindowEvent = new WindowEvent(WindowEvent.CLOSE);
				cgEvent.dispatch();
			}


			private function onHelp():void {
				dispatchEvent(new VmcHelpEvent(VmcHelpEvent.HELP, 'section_download'));
			}
			
			private function submit():void {
				var ids:Array = [];
				for each (var entry:VidiunBaseEntry in entries) {
					ids.push(entry.id);
				}
				var cgEvent:DownloadEvent = new DownloadEvent(DownloadEvent.DOWNLOAD_ENTRY, ids.join(','),
															  (cb.selectedItem as VidiunFlavorParams).id +
					'');
				cgEvent.dispatch();
				removeMe();
				GoogleAnalyticsTracker.getInstance().sendToGA(GoogleAnalyticsConsts.CONTENT_DOWNLOAD, GoogleAnalyticsConsts.CONTENT);
				VAnalyticsTracker.getInstance().sendEvent(VAnalyticsTrackerConsts.CONTENT,VidiunStatsVmcEventType.CONTENT_DOWNLOAD,
														  "EntryTable>Download", entry.id);
			}


			/**
			 * get window text
			 * */
			private function getDownloadLabel():String {
				var result:String;
				if (entries.length == 1) {
					result = resourceManager.getString('cms', 'entryToDownload');
				}
				else {
					result = resourceManager.getString('cms', 'entriesToDownload').replace('{NUM}', entries.length);
				}
				return result;
			}
		]]>
	</mx:Script>
	<mx:Label text="{getDownloadLabel()}"/>
	<mx:HBox>
		<mx:Label text="{resourceManager.getString('cms', 'videoDeliveredAs')}"/>
		<mx:ComboBox id="cb" dataProvider="{flavorParams}" labelField="name"/>
	</mx:HBox>
	<mx:Label text="{resourceManager.getString('cms', 'audioDeliveredAs')}"/>
	<mx:Label text="{resourceManager.getString('cms', 'imageDeliveredAs')}"/>
	<mx:Label htmlText="{resourceManager.getString('cms', 'otherTypesDeliveredAs')}"/>
	<mx:HBox width="100%" horizontalAlign="center" verticalAlign="middle" paddingBottom="2" paddingTop="2">
		<mx:Button label="{resourceManager.getString('cms', 'submit')}" click="{submit()}" buttonMode="true"/>
	</mx:HBox>
</HelpTitleWindow>
