<?xml version="1.0" encoding="utf-8"?>
<ir:FlavorAssetRendererBase xmlns="com.vidiun.vmc.modules.content.view.window.entrydetailswindowsections.renderers.*"
							xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%"
							xmlns:renderers="com.vidiun.vmc.modules.content.view.window.entrydetails.renderers.*"
							xmlns:ir="com.vidiun.edw.view.ir.*">
	<mx:Metadata>
		[ResourceBundle("drilldown")]
	</mx:Metadata>
	<mx:Script>
		<![CDATA[
			import com.vidiun.types.VidiunFlavorAssetStatus;
			
			private function setStatusLabel():void
			{
				var statusStr:String = '';
				var fontColor:String = "#000000";
				var tooltip:String = '';
				
				if(data.vidiunFlavorAssetWithParams.flavorAsset != null)
				{
					switch(int(data.vidiunFlavorAssetWithParams.flavorAsset.status))
					{
						case VidiunFlavorAssetStatus.CONVERTING:
						{
							statusStr = resourceManager.getString('drilldown','convertingStatus');
							tooltip = statusStr;
							break;
						}
						case VidiunFlavorAssetStatus.ERROR:
						{
							statusStr = resourceManager.getString('drilldown','errorStatus');
							fontColor = "#FF0000";
							tooltip = statusStr;
							break;
						}
						case VidiunFlavorAssetStatus.DELETED:
						{
							statusStr = resourceManager.getString('drilldown','deleteStatus');
							tooltip = statusStr;
							break;
						}
						case VidiunFlavorAssetStatus.QUEUED:
						{
							statusStr = resourceManager.getString('drilldown','inqueueStatus');
							tooltip = statusStr;
							break;
						}
						case VidiunFlavorAssetStatus.READY:
						{
							statusStr = resourceManager.getString('drilldown','readyStatus');
							tooltip = statusStr;
							break;
						}
						case VidiunFlavorAssetStatus.NOT_APPLICABLE:
						{
							statusStr = resourceManager.getString('drilldown','notAppStatus');
							tooltip = resourceManager.getString('drilldown','notAppStatusTooltip');
							break;
						}
						case VidiunFlavorAssetStatus.TEMP:
						{
							statusStr = resourceManager.getString('drilldown','tmpStatus');
							tooltip = statusStr;
							break;
						}
						case VidiunFlavorAssetStatus.WAIT_FOR_CONVERT:
						{
							statusStr = resourceManager.getString('drilldown','waitCnvrtStatus');
							tooltip = statusStr;
							break;
						}
						case VidiunFlavorAssetStatus.IMPORTING:
						{
							statusStr = resourceManager.getString('drilldown','importStatus');
							tooltip = statusStr;
							break;
						}
						case VidiunFlavorAssetStatus.VALIDATING:
						{
							statusStr = resourceManager.getString('drilldown','validateStatus');
							tooltip = statusStr;
							break;
						}
						case VidiunFlavorAssetStatus.EXPORTING:
						{
							statusStr = resourceManager.getString('drilldown','exportStatus');
							tooltip = statusStr;
							break;
						}
							
					}
				}
				else
				{
					statusStr = resourceManager.getString('drilldown','notRequiredStatus');
					tooltip = statusStr;
				}
				statusLabel.enabled = (data.vidiunFlavorAssetWithParams.flavorAsset != null);
				statusLabel.text = statusStr;
				statusLabel.toolTip = tooltip;
				statusLabel.setStyle("color", fontColor);
			}
			
			override public function set data(value:Object):void
			{
				super.data = value;
				setStatusLabel();
			}
			
		]]>
	</mx:Script>
	<mx:Label id="statusLabel" creationComplete="setStatusLabel()" selectable="true" />
</ir:FlavorAssetRendererBase>
