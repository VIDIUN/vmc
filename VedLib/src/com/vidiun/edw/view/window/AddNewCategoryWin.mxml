<?xml version="1.0" encoding="utf-8"?>
<!---
	create new category window.
	opened from categories tree when clicking "+" in edit mode.
	@deprecated (falcon version)
-->
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" showCloseButton="true"
				 close="closeWindow(event)" title="{resourceManager.getString('cms','addNewCategoryTitle')}"
				 minWidth="250" styleName="TitleWindowType2">

	<mx:Script>
		<![CDATA[
			import com.vidiun.analytics.GoogleAnalyticsConsts;
			import com.vidiun.analytics.GoogleAnalyticsTracker;
			import com.vidiun.analytics.VAnalyticsTracker;
			import com.vidiun.analytics.VAnalyticsTrackerConsts;
			import com.vidiun.edw.components.filter.CategoriesTree;
			import com.vidiun.edw.events.VedDataEvent;
			import com.vidiun.edw.vo.CategoryVO;
			import com.vidiun.types.VidiunStatsVmcEventType;
			import com.vidiun.vo.VidiunCategory;
			
			import mx.managers.PopUpManager;
			import mx.utils.StringUtil;

			/**
			 * the vo for the parent category.
			 * */
			public var parentCategory:CategoryVO;


			/**
			 * close window event - when pressing the X button, cancel button or after saving the data
			 */
			private function closeWindow(event:Event = null):void {
				PopUpManager.removePopUp(this);
			}


			private function saveNewCategory(event:Event = null):void {
				var name:String = StringUtil.trim(newCategoryName.text);
				var newCategory:VidiunCategory = new VidiunCategory();
				newCategory.name = name;
				newCategory.parentId = parentCategory.id;

				
				var e:VedDataEvent = new VedDataEvent(CategoriesTree.OPEN_ADD_CATEGORY);
				e.data = newCategory;
				dispatchEvent(e);
				
				VAnalyticsTracker.getInstance().sendEvent(VAnalyticsTrackerConsts.CONTENT,VidiunStatsVmcEventType.CONTENT_ADD_ADMIN_TAGS,
														  "CategoriesTree>AddNewCategory");
				GoogleAnalyticsTracker.getInstance().sendToGA(GoogleAnalyticsConsts.CONTENT_ADD_CATEGORY, GoogleAnalyticsConsts.CONTENT);
				closeWindow();
			}


			private function onNameChange(event:Event = null):void {
				var name:String = StringUtil.trim(newCategoryName.text);
				var isOk:Boolean = true;
				nameValidator.maxLength = 60;
				isOk = name != '';

				if (!isOk) {
					nameValidator.requiredFieldError = resourceManager.getString('cms',
																				 'emptyCategoryNameError');
				}
				else {
					for each (var catChild:CategoryVO in parentCategory.children) {
						if (name == catChild.name) {
							isOk = false;
							nameValidator.maxLength = 1;
							nameValidator.tooLongError = resourceManager.getString('cms',
																				   'categoryNameInUseError');
							break;
						}
					}
				}

				nameValidator.validate();
				submitBtn.enabled = isOk;
			}


			private function setNameFocus():void {
				stage.focus = newCategoryName;
			}
		]]>
	</mx:Script>
	<mx:StringValidator id='nameValidator' source="{newCategoryName}" property="text" trigger="{newCategoryName}"
						triggerEvent="change" required="true" maxLength="60"/>
	<mx:TextInput width="100%" id="newCategoryName" maxChars="60" change="onNameChange(event)"
				  creationComplete="setNameFocus()" enter="saveNewCategory(event)"/>
	<mx:ControlBar width="100%" horizontalAlign="center" paddingBottom="2" paddingLeft="2" paddingRight="2"
				   paddingTop="2">
		<mx:Button label="{resourceManager.getString('cms','addCategory')}" enabled="false" useHandCursor="true"
				   buttonMode="true" click="saveNewCategory(event)" id="submitBtn"/>
	</mx:ControlBar>

</mx:TitleWindow>
